package androidhive.info.aiham.OhterPrinter;

import android.Manifest;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.AlertDialog;
import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothDevice;
import android.bluetooth.BluetoothSocket;
import android.content.ComponentName;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.ServiceConnection;
import android.content.pm.PackageManager;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Color;
import android.graphics.PorterDuff;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.os.Message;
import android.os.RemoteException;
import android.support.v4.app.ActivityCompat;
import android.support.v7.app.ActionBar;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.bumptech.glide.Glide;
import com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;
import com.wang.avi.AVLoadingIndicatorView;

import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Random;

import androidhive.info.aiham.Activity.AvailableCard;
import androidhive.info.aiham.ApiClass.ApiUtils;
import androidhive.info.aiham.ApiClass.CardInformation;
import androidhive.info.aiham.ApiClass.Printcard;
import androidhive.info.aiham.Interface.ApiInterface;
import androidhive.info.aiham.Model.BalanceModel;
import androidhive.info.aiham.Model.PreferencesUtils;
import androidhive.info.aiham.PrinterESC.Bluetooth.BluetoothUtil;
import androidhive.info.aiham.R;
import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;
import woyou.aidlservice.jiuiv5.ICallback;
import woyou.aidlservice.jiuiv5.IWoyouService;


public class PrinterTestDemoAct extends AppCompatActivity implements OnClickListener {

	Calendar c = Calendar.getInstance();
	ActionBar actionBar;
	Button btnPrint,btnBack;
	ImageView imageView;
	String productId;

	private static final int REQUEST_EXTERNAL_STORAGE = 1;
	private static String[] PERMISSIONS_STORAGE = {Manifest.permission.READ_EXTERNAL_STORAGE, Manifest.permission.WRITE_EXTERNAL_STORAGE
	};
	AVLoadingIndicatorView avl;
	private ArrayList permissionsRejected = new ArrayList();
	private final static int ALL_PERMISSIONS_RESULT = 101;
	TextView cat_name,sno_txt,print_date,card_nametxt,exp_date,totalqty,disc,pintxt,price_txt,usrbal_txt,arbic_disc;
	EditText print_qty;
	String sno;

	private static final String TAG = "PrinterTestDemo";

	public static final int DO_PRINT = 0x10001;
	private Button b_barcode, b_pic, b_qcode, b_self, b_text, b_table, b_init,b_lines, b_test;
	private Button b_testall,b_baidu,b_query,b_bytes, b_block, b_length;

	ImageView img1;
	private  TextView info;

	private IWoyouService woyouService;
	private byte[] inputCommand ;

	private final int RUNNABLE_LENGHT = 11;

	private Random random = new Random();

	private ICallback callback = null;
	String catname, sirno, date, cardname, exparedate;
	String totalqty1,printqty,des,pincode,arbicdesc;
	Bitmap img;

	private ServiceConnection connService = new ServiceConnection() {
		@Override
		public void onServiceDisconnected(ComponentName name) {
			woyouService = null;
		}

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			woyouService = IWoyouService.Stub.asInterface(service);

		}
	};

	private final int MSG_TEST = 1;
	private long printCount = 0;

	@SuppressLint("HandlerLeak")
	Handler handler=new Handler(){
		@Override
		public void handleMessage(Message msg){
			if(msg.what == MSG_TEST){
				//testAll();
				long mm = MemInfo.getmem_UNUSED(PrinterTestDemoAct.this);
				if( mm < 100){
					handler.sendEmptyMessageDelayed(MSG_TEST, 20000);
				}else{
					handler.sendEmptyMessageDelayed(MSG_TEST, 800);
				}
				Log.i(TAG,"testAll: " + printCount + " Memory: " + mm);
			}
		}
	};


	private void test(){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					woyouService.printerSelfChecking(null);
					woyouService.printText(" printed: " + printCount + " bills.\n\n\n\n", null);
					printCount++;
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}});
	}
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.layout_printer_test_demo);
		img1=findViewById(R.id.img);
		innitView();

		verifyStoragePermissions(this);
		cat_name=(TextView)findViewById(R.id.cat_name);
		arbic_disc=(TextView)findViewById(R.id.arbic_disc);
		usrbal_txt=findViewById(R.id.usrbal_txt);
		price_txt=(TextView)findViewById(R.id.price_txt);
		sno_txt=(TextView)findViewById(R.id.sno_txt);
		print_date=(TextView)findViewById(R.id.print_date);
		pintxt=(TextView)findViewById(R.id.pintxt);
		card_nametxt=(TextView)findViewById(R.id.card_nametxt);
		disc=(TextView)findViewById(R.id.disc);
		exp_date=(TextView)findViewById(R.id.exp_date);
		totalqty=(TextView)findViewById(R.id.totalqty);
		print_qty=(EditText) findViewById(R.id.print_qty);
		avl=(AVLoadingIndicatorView)findViewById(R.id.avi);
		avl.hide();

		Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
		setSupportActionBar(toolbar);
		getSupportActionBar().setDisplayShowTitleEnabled(false);


		actionBar = getSupportActionBar();
		actionBar.setDisplayHomeAsUpEnabled(true);
		actionBar.setHomeButtonEnabled(true);
		Drawable drawable=toolbar.getNavigationIcon();
		drawable.setColorFilter(Color.WHITE, PorterDuff.Mode.DST_IN);


		imageView=(ImageView)findViewById(R.id.imageView);
		btnBack=(Button)findViewById(R.id.backbtn);
		btnBack.setOnClickListener(this);
		btnPrint=(Button)findViewById(R.id.printbtn);
		btnPrint.setOnClickListener(this);
		img1.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View view) {
				finish();
				PrinterTestDemoAct.this.overridePendingTransition(R.anim.slide_from_left, R.anim.slide_to_right);
			}
		});

		SimpleDateFormat df3 = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss a");
		String formattedDate3 = df3.format(c.getTime());
		print_date.setText(formattedDate3);

		cat_name.setText(getIntent().getStringExtra("cat_name"));
		arbic_disc.setText(getIntent().getStringExtra("arabic_desc"));
		price_txt.setText("Card Price : "+getIntent().getStringExtra("price"));
		sno_txt.setText(getIntent().getStringExtra("sno"));
		sno=getIntent().getStringExtra("sno");
		pintxt.setText(getIntent().getStringExtra("pincode"));
		totalqty.setText(getIntent().getStringExtra("quantity"));
		card_nametxt.setText(getIntent().getStringExtra("card_name"));
		productId=getIntent().getStringExtra("card_id");
		if(!ApiUtils.isEmptyString(getIntent().getStringExtra("validity_end"))) {
			exp_date.setText("Card Exp. :"+getIntent().getStringExtra("validity_end"));
		}
		if(!ApiUtils.isEmptyString(getIntent().getStringExtra("desc"))) {
			disc.setText(getIntent().getStringExtra("desc"));
		}

		Glide.with(PrinterTestDemoAct.this).load(ApiUtils.ImageBaseUrl+getIntent().getStringExtra("image_url")).error(R.drawable.logon).into(imageView);
		if(PreferencesUtils.getWorkMode().equalsIgnoreCase("1")) {
			getgurrentBalance(PreferencesUtils.getUser_id());
		}else {
			usrbal_txt.setText("");
		}
	}

	public static void verifyStoragePermissions(Activity activity) {
		// Check if we have write permission
		int permission = ActivityCompat.checkSelfPermission(activity, Manifest.permission.WRITE_EXTERNAL_STORAGE);

		if (permission != PackageManager.PERMISSION_GRANTED) {
			// We don't have permission so prompt the user
			ActivityCompat.requestPermissions(
					activity,
					PERMISSIONS_STORAGE,
					REQUEST_EXTERNAL_STORAGE
			);
		}

	}

	public void getgurrentBalance(String usrid){
		avl.show();
		final ApiInterface mApiServices=ApiUtils.getInterfaceService();
		Call<BalanceModel> mService=mApiServices.getBalance(usrid);
		mService.enqueue(new Callback<BalanceModel>() {
			@Override
			public void onResponse(Call<BalanceModel> call, Response<BalanceModel> response) {
				BalanceModel object=response.body();
				if(object.status){
					PreferencesUtils.setAvalibleBalance(object.data.get(0).balance);
					actionBar.setTitle("Balance: "+object.data.get(0).balance+" IQD");
				}
				avl.hide();
			}

			@Override
			public void onFailure(Call<BalanceModel> call, Throwable t) {
				avl.hide();
			}
		});

	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		int id = item.getItemId();
		if (id == android.R.id.home) {
			AvailableCard.position=-1;
			finish();
			PrinterTestDemoAct.this.overridePendingTransition(R.anim.slide_from_left, R.anim.slide_to_right);
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	@Override
	public void onBackPressed() {
		super.onBackPressed();
		AvailableCard.position=-1;
		PrinterTestDemoAct.this.overridePendingTransition(R.anim.slide_from_left, R.anim.slide_to_right);
	}

	@Override
	public void onClick(View view) {
		switch (view.getId()){
			case R.id.backbtn:
				AvailableCard.position=-1;
				finish();
				break;
			case R.id.printbtn:

				if(print_qty.getText().toString().trim().equalsIgnoreCase("")){
					print_qty.setText("1");
				}
				int tq=Integer.parseInt(totalqty.getText().toString().trim());
				int trfq=Integer.parseInt(print_qty.getText().toString().trim());
				if(tq<trfq){
					Toast.makeText(getBaseContext(), "Card transfer quantity less or equal total quantity",
							Toast.LENGTH_LONG).show();
					return;
				}

				String expdate = "Card Exp.  "+exp_date.getText().toString().trim();
				SimpleDateFormat df3 = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss a");
				String formattedDate3 = df3.format(c.getTime());
				printCardService(PreferencesUtils.getUser_id(),productId,totalqty.getText().toString().trim(),print_qty.getText().toString().trim(),cat_name.getText().toString().trim()
						,sno,formattedDate3,card_nametxt.getText().toString().trim(),expdate,disc.getText().toString().trim(),pintxt.getText().toString().trim(),arbic_disc.getText().toString().trim());



				break;
		}
	}

	private void printCardService(String usrid, String card_id, final String available_card_quantity, final String transfer_card_quantity
			, final String catname1, final String sno, final String printdate, final String cardname1, final String expdate, final String des1,final String pincode1,final String arbicdesc1){

		final ApiInterface mApiService = ApiUtils.getInterfaceService();
		Call<Printcard> mService = mApiService.Printc(usrid,card_id,transfer_card_quantity);
		mService.enqueue(new Callback<Printcard>() {
			@Override
			public void onResponse(Call<Printcard> call, Response<Printcard> response) {
				avl.hide();
				Printcard mLoginObject = response.body();
				if(mLoginObject.status==true) {
					avl.hide();
					AvailableCard.position=1;
					printText(transfer_card_quantity,catname1,printdate,cardname1,available_card_quantity,
							des1,arbicdesc1,mLoginObject);
//					Bitmap bmp = ((GlideBitmapDrawable)imageView.getDrawable().getCurrent()).getBitmap();
//					int temp=Integer.valueOf(transfer_card_quantity);
//					List<CardInformation> cardlist=new ArrayList<>();
//					cardlist.addAll(mLoginObject.data);
//					for(int i= 0; i<temp;i++) {
//						String sno_card=cardlist.get(i).sno;
//						String pincode_card=cardlist.get(i).pincode;
//						String validity_card=cardlist.get(i).validity_end;
//						 catname=catname1;
//						 sirno=sno_card;
//						 date=printdate;
//						 cardname=cardname1;
//						 exparedate=validity_card;
//						 totalqty1=available_card_quantity;
//						 printqty=transfer_card_quantity;
//						 des=des1;
//						 pincode=pincode_card;
//						 arbicdesc=arbicdesc1;
//						 img=bmp;
//						printText1();
//					}
                 finish();
				}else {

					avl.hide();
					Toast.makeText(PrinterTestDemoAct.this,  mLoginObject.message, Toast.LENGTH_LONG).show();
				}

			}
			@Override
			public void onFailure(Call<Printcard> call, Throwable t) {
				call.cancel();

				avl.hide();
				Toast.makeText(PrinterTestDemoAct.this, "Please check your network connection and internet permission", Toast.LENGTH_LONG).show();
			}
		});
	}



	private void innitView() {
		new BitmapUtils(this);
		callback = new ICallback.Stub() {

			@Override
			public void onRunResult(final boolean success) throws RemoteException {
			}

			@Override
			public void onReturnString(final String value) throws RemoteException {
				Log.i(TAG,"printlength:" + value + "\n");
			}

			@Override
			public void onRaiseException(int code, final String msg) throws RemoteException {
				Log.i(TAG,"onRaiseException: " + msg);
				runOnUiThread(new Runnable(){
					@Override
					public void run() {
						info.append("onRaiseException = " + msg + "\n");
					}});

			}
		};
		Intent intent=new Intent();
		intent.setPackage("woyou.aidlservice.jiuiv5");
		intent.setAction("woyou.aidlservice.jiuiv5.IWoyouService");
		startService(intent);
		bindService(intent, connService, Context.BIND_AUTO_CREATE);
	}
	

	Bitmap mBitmap;
	Bitmap mBitmap1;
		


	public void printRandomDot(final int lines){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					//woyouService.getPrintedLength(callback);
					byte[] data = null;
					for(int i=0; i<lines; i++){
						data = setCusorPosition(random.nextInt(384));
						woyouService.sendRAWData(data, callback);
					}
				} catch (RemoteException e) {
					e.printStackTrace();
				}
			}});	
	}

	public void printBlackBlock(int height){
		final byte[] bytes = BytesUtil.initBlackBlock(height,384);
	//	printData(bytes);
	}

	public void printErlmoBill(){
		//printData(getErlmoData());
	}
	
	//Koubei take away bill
	public void printKoubeiBill(){
		//printData(getKoubeiData());
	}
	
	//Meituan take away bill
	public void printMeiTuanBill(){
		//printData(getMeituanBill());
	}
	
	//Baidu take away bill
	public void printBaiduBill(){
		//printData(getBaiduTestBytes());
	}
	
	//print character 
	public void printData(final byte[] bill){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){
			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					woyouService.sendRAWData(bill, callback);
					woyouService.lineWrap(3, callback);
				} catch (RemoteException e) {
					e.printStackTrace();
				}
			}});		
	}
	
	//Query print length since reboot
	public void queryPrintLength(){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					woyouService.getPrintedLength(callback);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}});		
	}
	
	//print self-inspection page
	public void printSelf(){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					woyouService.setAlignment(1, callback);
					woyouService.printerSelfChecking(callback);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}});				
	}
	
	//print several blank line
	public void printLineWrap(final int n){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				try {
					woyouService.lineWrap(n, callback);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}});		
	}
	
	//initialize  the printer
	public void printerInit(){

		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					woyouService.printerInit(callback);							
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}});		
	}

	public void printText(String transfer_card_quantity,String catname1,String printdate,String cardname1,String available_card_quantity,
						  String des1,String arbicdesc1,Printcard mLoginObject){
		Bitmap bmp = ((GlideBitmapDrawable)imageView.getDrawable().getCurrent()).getBitmap();
		int temp=Integer.valueOf(transfer_card_quantity);
		List<CardInformation> cardlist=new ArrayList<>();
		cardlist.addAll(mLoginObject.data);
		for(int i= 0; i<temp;i++) {
			String sno_card = cardlist.get(i).sno;
			String pincode_card = cardlist.get(i).pincode;
			String validity_card = cardlist.get(i).validity_end;
			catname = catname1;
			sirno = sno_card;
			date = printdate;
			cardname = cardname1;
			exparedate = validity_card;
			totalqty1 = available_card_quantity;
			printqty = transfer_card_quantity;
			des = des1;
			pincode = pincode_card;
			arbicdesc = arbicdesc1;
			img = bmp;
//			ThreadPoolManager.getInstance().executeTask(new Runnable() {
//
//				@Override
//				public void run() {
					if (img == null) {
						mBitmap = BitmapFactory.decodeResource(getResources(), R.raw.test);
					} else {
						mBitmap = img;
					}
					try {
						woyouService.lineWrap(2, callback);
						woyouService.setAlignment(1, callback);
						woyouService.printTextWithFont(catname + " ", "", 35, callback);

						woyouService.lineWrap(1, callback);
						woyouService.setAlignment(1, callback);
						woyouService.printTextWithFont(" Serial#  " + sirno + "\n", "", 30, callback);
					/*woyouService.setAlignment(1, callback);
					woyouService.printTextWithFont(sirno+" ","",25, callback);*/

					/*woyouService.lineWrap(1, callback);
					woyouService.setAlignment(1, callback);
					woyouService.printTextWithFont("Print Date \n","",40, callback);*/
						woyouService.setAlignment(1, callback);
						woyouService.printTextWithFont(date + "\n", "", 30, callback);

						woyouService.setAlignment(1, callback);
						woyouService.printBitmap(mBitmap, callback);

						woyouService.setAlignment(1, callback);
						woyouService.printTextWithFont("\n" + cardname, "", 30, callback);


						woyouService.lineWrap(1, callback);
						woyouService.setAlignment(1, callback);
						woyouService.printTextWithFont("Exp. Date# " + exparedate, "", 25, callback);

					/*woyouService.lineWrap(2, callback);
					woyouService.setAlignment(0, callback);
					woyouService.printTextWithFont("Total quantity", "", 25, callback);

					woyouService.setAlignment(2, callback);
					woyouService.printTextWithFont("Print quantity\n", "", 25, callback);

					woyouService.setAlignment(0, callback);
					woyouService.printTextWithFont(totalqty+"", "", 25, callback);

					woyouService.setAlignment(2, callback);
					woyouService.printTextWithFont(printqty+"", "", 25, callback);*/
						woyouService.lineWrap(2, callback);
						woyouService.setAlignment(1, callback);
						woyouService.printTextWithFont("\nPinCode \n", "", 40, callback);
						woyouService.printTextWithFont("******************\n ", "", 30, callback);

						woyouService.setAlignment(1, callback);
						woyouService.printTextWithFont(pincode + "\n", "", 30, callback);
						woyouService.printTextWithFont("******************\n ", "", 30, callback);
						woyouService.lineWrap(1, callback);
						woyouService.setAlignment(1, callback);
						woyouService.printTextWithFont(arbicdesc + "\n", "", 30, callback);

						woyouService.setAlignment(1, callback);
						woyouService.printTextWithFont(des + "\n", "", 30, callback);

						woyouService.lineWrap(4, callback);
						woyouService.printerInit(null);

					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

				//}
			//});
		}
	}

	public int printText1(){

		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				if( img == null ){
					mBitmap = BitmapFactory.decodeResource(getResources(), R.raw.test);
				}else {
					mBitmap = img;
				}
				try {
					woyouService.lineWrap(2, callback);
					woyouService.setAlignment(1, callback);
					woyouService.printTextWithFont(catname+" ","",35, callback);

					woyouService.lineWrap(1, callback);
					woyouService.setAlignment(1, callback);
					woyouService.printTextWithFont(" Serial#  "+sirno+"\n","",30, callback);
					/*woyouService.setAlignment(1, callback);
					woyouService.printTextWithFont(sirno+" ","",25, callback);*/

					/*woyouService.lineWrap(1, callback);
					woyouService.setAlignment(1, callback);
					woyouService.printTextWithFont("Print Date \n","",40, callback);*/
					woyouService.setAlignment(1, callback);
					woyouService.printTextWithFont(date+"\n","",30, callback);

					woyouService.setAlignment(1, callback);
					woyouService.printBitmap(mBitmap, callback);

					woyouService.setAlignment(1, callback);
					woyouService.printTextWithFont("\n"+cardname,"",30, callback);



					woyouService.lineWrap(1, callback);
					woyouService.setAlignment(1, callback);
					woyouService.printTextWithFont("Exp. Date# "+exparedate, "", 25, callback);

					/*woyouService.lineWrap(2, callback);
					woyouService.setAlignment(0, callback);
					woyouService.printTextWithFont("Total quantity", "", 25, callback);

					woyouService.setAlignment(2, callback);
					woyouService.printTextWithFont("Print quantity\n", "", 25, callback);

					woyouService.setAlignment(0, callback);
					woyouService.printTextWithFont(totalqty+"", "", 25, callback);

					woyouService.setAlignment(2, callback);
					woyouService.printTextWithFont(printqty+"", "", 25, callback);*/
					woyouService.lineWrap(2, callback);
					woyouService.setAlignment(1, callback);
					woyouService.printTextWithFont("\nPinCode \n","",40, callback);
					woyouService.printTextWithFont("******************\n ","",30, callback);

					woyouService.setAlignment(1, callback);
					woyouService.printTextWithFont(pincode+"\n","",30, callback);
					woyouService.printTextWithFont("******************\n ","",30, callback);
					woyouService.lineWrap(1, callback);
					woyouService.setAlignment(1, callback);
					woyouService.printTextWithFont(arbicdesc+"\n","",30, callback);

					woyouService.setAlignment(1, callback);
					woyouService.printTextWithFont(des+"\n","",30, callback);

					woyouService.lineWrap(4, callback);
					//woyouService.printerSelfChecking(null);

				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

			}});
		return 1;
	}
	
	//print table
	public void printTable(){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					woyouService.setAlignment(0, callback);
					woyouService.sendRAWData(new byte[]{0x1B, 0x21, 0x08}, callback);
					
					woyouService.setFontSize(24, callback);						
					String[] text = new String[4];
					int[] width = new int[] { 10, 6, 6, 8 };
					int[] align = new int[] { 0, 2, 2, 2 }; 
					text[0] = "Name";
					text[1] = "Quantity";
					text[2] = "Price";
					text[3] = "Total price";
					woyouService.printColumnsText(text, width, new int[] { 1, 2, 2, 2 }, callback);
					
					text[0] = "Strawberry yoghourt";
					text[1] = "4";
					text[2] = "12.00";
					text[3] = "48.00";
					woyouService.printColumnsText(text, width, align, callback);
					
					text[0] = "Yoghourt B";
					text[1] = "10";
					text[2] = "4.00";
					text[3] = "40.00";
					woyouService.printColumnsText(text, width, align, callback);
					
					text[0] = "Yogurt orange fruit cake"; // Text long, wrap
					text[1] = "100";
					text[2] = "16.00";
					text[3] = "1600.00";
					woyouService.printColumnsText(text, width, align, callback);
	
					text[0] = "Yogurt fruit sandwich";
					text[1] = "10";
					text[2] = "4.00";
					text[3] = "40.00";
					woyouService.printColumnsText(text, width, align, callback);
					
					woyouService.setFontSize(30, callback);	
					woyouService.setAlignment(0, callback);
					
					text = new String[3];
					width = new int[] { 10, 6, 8 };
					align = new int[] { 0, 2, 2 }; //
					
					text[0] = "Dish name";
					text[1] = "quantity";
					text[2] = "Total price";
					woyouService.printColumnsText(text, width, new int[] {1,2,2}, callback);
					
					text[0] = "Strawberry yoghurt pudding";
					text[1] = "4";
					text[2] = "48.00";
					woyouService.printColumnsText(text, width, align, callback);
					
					text[0] = "Yogurt fruit sandwich";
					text[1] = "10";
					text[2] = "40.00";
					woyouService.printColumnsText(text, width, align, callback);
					
					text[0] = "Yogurt orange fruit cake"; // 文字超长,换行
					text[1] = "100";
					text[2] = "1600.00";
					woyouService.printColumnsText(text, width, align, callback);
	
					text[0] = "Milk";
					text[1] = "10";
					text[2] = "40.00";
					woyouService.printColumnsText(text, width, align, callback);							
					woyouService.lineWrap(3, null);
					
					woyouService.sendRAWData(new byte[]{0x1B, 0x21, 0x00}, callback);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}						
			}});
	}
	
	//print picture
	public void printBitmap(){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				if( mBitmap == null ){
					mBitmap = BitmapFactory.decodeResource(getResources(), R.raw.test);
				}
				if( mBitmap1 == null ){
					mBitmap1 = BitmapUtils.zoomBitmap(mBitmap, 300, 300);
				}
				
				try {
					woyouService.setAlignment(1, callback);
					woyouService.printBitmap(mBitmap, callback);
					woyouService.printBitmap(mBitmap1, callback);
					woyouService.lineWrap(3, null);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}				
			}});		
	}
	
	//print barcode
	public void printBarcode(){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					woyouService.setAlignment(1, callback);
					woyouService.printBarCode("2015112910", 8, 120, 2, 2, callback);
					woyouService.lineWrap(3, callback);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}});		
	}
	
	//print qr-code
	public void printQCode(){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){
			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					woyouService.setAlignment(1, callback);
					//woyouService.printQRCode("http://www.woyouwaimai.com", 10, 2, callback);
					byte[] bytes = BytesUtil.getZXingQRCode("http://www.woyouwaimai.com", 240);
					System.out.println(BytesUtil.getHexStringFromBytes(bytes));
					woyouService.sendRAWData(bytes, callback);
					woyouService.lineWrap(3, callback);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}});		
	}
	
	//Comprehensive print test
	public void fullTest(){
		ThreadPoolManager.getInstance().executeTask(new Runnable(){

			@Override
			public void run() {
				try {			
					Bitmap bmp;
					//print ladder black block
					woyouService.sendRAWData(BytesUtil.initBlackBlock(384), callback);
					//woyouService.lineWrap(1, null);
					
					//print black block
					//woyouService.sendRAWData(BytesUtil.initBlackBlock(48, 384), callback);
					//woyouService.lineWrap(1, callback);
					
					//print gray block 
					woyouService.sendRAWData(BytesUtil.initGrayBlock(48, 384), callback);
					//woyouService.lineWrap(1, null);
					
					//print table
					woyouService.sendRAWData(BytesUtil.initTable(3, 12), callback);
					//woyouService.lineWrap(1, null);
					
					bmp = BytesUtil.getTableBitmapFromData(24, 48, 8);
					woyouService.printBitmap(bmp, callback);
					
					woyouService.setAlignment(0, callback);
					String s = "商";
					for(int i=0; i<16; i++){
						woyouService.printText(s + "\n", callback);
						s += "商";
					}
					woyouService.sendRAWData(new byte[]{0x1B,0x21,0x10}, callback);
					s = "测";
					for(int i=0; i<16; i++){
						woyouService.printText(s + "\n", callback);
						s += "测";
					}
					woyouService.sendRAWData(new byte[]{0x1B,0x21,0x00}, callback);
					int k = 6;
					for(int i=0; i<64; i++){
						bmp = BytesUtil.getLineBitmapFromData(12,k);
						k += 6;
						woyouService.printBitmap(bmp, callback);						
					}

					woyouService.lineWrap(3, callback);

					
				} catch (RemoteException e) {
					e.printStackTrace();
				}
			}});				
	}
	
	//manual input print
	public void inputBytes(){
	      final EditText inputServer = new EditText(this);
	        AlertDialog.Builder builder = new AlertDialog.Builder(this);
	        builder.setTitle("Server").setIcon(android.R.drawable.ic_dialog_info).setView(inputServer)
	                .setNegativeButton("Cancel", null);
	        builder.setPositiveButton("Ok", new DialogInterface.OnClickListener() {

	            public void onClick(DialogInterface dialog, int which) {
	            	inputCommand = BytesUtil.getBytesFromHexString(inputServer.getText().toString());
	            	try{
	            		System.out.println(BytesUtil.getHexStringFromBytes(inputCommand));
	            		woyouService.sendRAWData(inputCommand, callback);
	            	} catch (RemoteException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
	            }
	        });
	        builder.show();						
	}
	
	
	//ele.me take away bill
	public byte[] getErlmoData(){
		byte[] rv = new byte[]{
				0x1b,0x40,0x1b,0x61,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x20,0x1d,0x21,0x11,0x23,0x31,0x1d,0x21,0x00,0x00,(byte)0xb6,(byte)0xf6
				,(byte)0xc1,(byte)0xcb,(byte)0xc3,(byte)0xb4,(byte)0xcd,(byte)(byte)0xe2,(byte)0xc2,(byte)0xf4,(byte)0xb5,(byte)0xa5,0x20,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x0a,0x0a,0x1b,0x61
				,0x01,(byte)0xbf,(byte)0xa8,(byte)0xc8,(byte)0xf8,(byte)0xc5,(byte)0xfb,(byte)0xc8,(byte)0xf8,0x0a,0x0a,0x1b,0x61,0x00,0x1b,0x61,0x01,0x1d,0x21,0x11,0x2d,0x2d
				,(byte)0xd2,(byte)0xd1,(byte)0xd6,(byte)0xa7,(byte)0xb8,(byte)0xb6,0x2d,0x2d,0x1d,0x21,0x00,0x00,0x0a,0x0a,0x1b,0x61,0x00,0x1b,0x61,0x01,0x1d,0x21
				,0x11,(byte)0xd4,(byte)0xa4,(byte)0xbc,(byte)0xc6,0x31,0x39,0x3a,0x30,0x30,(byte)0xcb,(byte)0xcd,(byte)0xb4,(byte)(byte)0xef,0x1d,0x21,0x00,0x00,0x0a,0x0a,0x1b,0x61
				,0x00,0x5b,(byte)0xcf,(byte)0xc2,(byte)0xb5,(byte)0xa5,(byte)0xca,(byte)0xb1,(byte)0xbc,(byte)(byte)0xe4,0x5d,0x32,0x30,0x31,0x34,0x2d,0x31,0x32,0x2d,0x30,0x33,0x20
				,0x31,0x36,0x3a,0x32,0x31,0x0a,0x5b,(byte)0xb1,(byte)0xb8,(byte)0xd7,(byte)0xa2,0x5d,0x1d,0x21,0x01,(byte)0xb2,(byte)0xbb,(byte)0xb3,(byte)0xd4,(byte)0xc0,(byte)0xb1,0x20
				,(byte)0xc0,(byte)0xb1,(byte)0xd2,(byte)0xbb,(byte)0xb5,(byte)(byte)0xe3,0x20,(byte)0xb6,(byte)(byte)0xe0,(byte)0xbc,(byte)0xd3,(byte)0xc3,(byte)0xd7,0x20,(byte)0xc3,(byte)0xbb,(byte)0xc1,(byte)(byte)0xe3,(byte)0xc7,(byte)0xae,0x1d,0x21
				,0x00,0x0a,0x5b,(byte)0xb7,(byte)0xa2,(byte)0xc6,(byte)0xb1,0x5d,(byte)0xd5,(byte)(byte)0xe2,(byte)0xca,(byte)0xc7,(byte)0xd2,(byte)0xbb,(byte)0xb8,(byte)0xf6,(byte)0xb7,(byte)0xa2,(byte)0xc6,(byte)0xb1,(byte)0xcc,(byte)0xa7
				,(byte)0xcd,(byte)0xb7,0x0a,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,(byte)0xb2,(byte)0xcb,(byte)0xc3,(byte)0xfb,0x20,0x20,0x20,0x20
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,(byte)0xca,(byte)0xfd,(byte)0xc1,(byte)0xbf,0x20,0x20,(byte)0xd0,(byte)0xa1
				,(byte)0xbc,(byte)0xc6,0x0a,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x20,0x31,(byte)0xba,(byte)0xc5,(byte)0xc0,(byte)0xba,(byte)0xd7,(byte)0xd3
				,0x20,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x1d,0x21,0x01,(byte)0xb2,(byte)(byte)0xe2,(byte)0xca,(byte)0xd4,(byte)0xc3,(byte)0xc0
				,(byte)0xca,(byte)0xb3,(byte)0xd2,(byte)0xbb,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1d,0x21
				,0x01,0x20,0x78,0x34,0x1d,0x21,0x00,0x1d,0x21,0x01,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x34
				,0x1d,0x21,0x00,0x0a,0x1d,0x21,0x01,(byte)0xb2,(byte)(byte)0xe2,(byte)0xca,(byte)0xd4,(byte)0xc3,(byte)0xc0,(byte)0xca,(byte)0xb3,(byte)0xb6,(byte)0xfe,0x1d,0x21,0x00,0x20,0x20
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x20,0x78,0x36,0x1d,0x21,0x00,0x1d,0x21
				,0x01,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x36,0x1d,0x21,0x00,0x0a,0x1d,0x21,0x01,(byte)0xb2,(byte)(byte)0xe2
				,(byte)0xca,(byte)0xd4,(byte)0xc3,(byte)0xc0,(byte)0xca,(byte)0xb3,(byte)0xc8,(byte)0xfd,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
				,0x20,0x20,0x1d,0x21,0x01,0x20,0x78,0x32,0x1d,0x21,0x00,0x1d,0x21,0x01,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20
				,0x1d,0x21,0x01,0x32,0x1d,0x21,0x00,0x0a,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x20,0x32,(byte)0xba
				,(byte)0xc5,(byte)0xc0,(byte)0xba,(byte)0xd7,(byte)0xd3,0x20,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x1d,0x21,0x01,(byte)0xb2
				,(byte)(byte)0xe2,(byte)0xca,(byte)0xd4,0x31,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
				,0x20,0x20,0x20,0x1d,0x21,0x01,0x20,0x78,0x31,0x1d,0x21,0x00,0x1d,0x21,0x01,0x1d,0x21,0x00,0x20,0x20,0x20,0x20
				,0x20,0x1d,0x21,0x01,0x31,0x1d,0x21,0x00,0x0a,0x1d,0x21,0x01,(byte)0xb2,(byte)(byte)0xe2,(byte)0xca,(byte)0xd4,0x32,0x1d,0x21,0x00,0x20,0x20
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x20,0x78,0x31
				,0x1d,0x21,0x00,0x1d,0x21,0x01,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x31,0x1d,0x21,0x00,0x0a
				,0x1d,0x21,0x01,(byte)0xb2,(byte)(byte)0xe2,(byte)0xca,(byte)0xd4,0x33,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x20,0x78,0x31,0x1d,0x21,0x00,0x1d,0x21,0x01,0x1d,0x21,0x00
				,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x32,0x33,0x1d,0x21,0x00,0x0a,0x1d,0x21,0x01,0x28,0x2b,0x29,(byte)0xb2,(byte)(byte)0xe2,(byte)0xca
				,(byte)0xd4,(byte)0xd1,(byte)0xf3,(byte)0xc6,(byte)0xf8,(byte)0xa4,(byte)0xce,(byte)0xce,(byte)0xf7,(byte)0xca,(byte)0xbd,(byte)0xcc,(byte)0xf0,(byte)0xb5,(byte)(byte)0xe3,0x1d,0x21,0x00,0x20,0x20,0x1d,0x21
				,0x01,0x20,0x78,0x31,0x1d,0x21,0x00,0x1d,0x21,0x01,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x31
				,0x1d,0x21,0x00,0x0a,0x1d,0x21,0x01,0x28,0x2b,0x29,(byte)0xb2,(byte)(byte)0xe2,(byte)0xca,(byte)0xd4,(byte)0xcb,(byte)(byte)0xe1,(byte)0xc0,(byte)0xb1,(byte)0xc4,(byte)0xbe,(byte)0xb6,(byte)0xfa
				,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x20,0x78,0x31,0x1d,0x21,0x00,0x1d,0x21
				,0x01,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x38,0x1d,0x21,0x00,0x0a,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x20,0x33,(byte)0xba,(byte)0xc5,(byte)0xc0,(byte)0xba,(byte)0xd7,(byte)0xd3,0x20,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x0a,0x1d,0x21,0x01,(byte)0xb2,(byte)(byte)0xe2,(byte)0xca,(byte)0xd4,(byte)0xb2,(byte)0xcb,(byte)0xc6,(byte)0xb7,(byte)0xc3,(byte)0xfb,(byte)0xd7,(byte)0xd6,(byte)0xba,(byte)0xdc
				,(byte)0xb3,(byte)0xa4,(byte)0xba,(byte)0xdc,(byte)0xb3,(byte)0xa4,(byte)0xba,(byte)0xdc,(byte)0xb3,(byte)0xa4,(byte)0xba,(byte)0xdc,(byte)0xb3,(byte)0xa4,(byte)0xba,(byte)0xdc,(byte)0xb3,(byte)0xa4,0x1d,0x21,0x00,0x0a
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
				,0x20,0x1d,0x21,0x01,0x20,0x78,0x31,0x1d,0x21,0x00,0x1d,0x21,0x01,0x1d,0x21,0x00,0x20,0x20,0x20,0x1d,0x21,0x01
				,0x33,0x30,0x30,0x1d,0x21,0x00,0x0a,0x1d,0x21,0x01,(byte)0xb2,(byte)(byte)0xe2,(byte)0xca,(byte)0xd4,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x20,0x78,0x31,0x1d,0x21
				,0x00,0x1d,0x21,0x01,0x1d,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x1d,0x21,0x01,0x31,0x1d,0x21,0x00,0x0a,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x20,(byte)0xc6,(byte)(byte)0xe4,(byte)0xcb,(byte)0xfb,(byte)0xb7,(byte)0xd1,(byte)0xd3,(byte)0xc3,0x20,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x1d,0x21,0x01,(byte)0xc5,(byte)(byte)0xe4,(byte)0xcb,(byte)0xcd,(byte)0xb7,(byte)0xd1,0x1d,0x21,0x00,0x20
				,0x20,0x20,0x20,0x20
		};
		return rv;
	}	
	
	//Baidu take away bill
	public byte[] getBaiduTestBytes(){
		byte[] rv = new byte[]{
				0x1b,0x40,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x11,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x1b,0x45,0x01,0x1b,0x47,0x01,(byte)0xb1,(byte)0xbe
				,(byte)0xb5,(byte)0xea,(byte)0xc1,(byte)0xf4,(byte)0xb4,(byte)0xe6,0x0a,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x2a,0x2a,0x2a
				,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a
				,0x2a,0x0a
				,0x1b,0x40,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x11,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x1b,0x45,0x01,0x1b,0x47,0x01,0x1b,0x61
				,0x01,0x23,0x31,0x35,0x20,(byte)0xb0,(byte)0xd9,(byte)0xb6,(byte)0xc8,(byte)0xcd,(byte)0xe2,(byte)0xc2,(byte)0xf4,0x0a,0x5b,(byte)0xbb,(byte)0xf5,(byte)0xb5,(byte)0xbd,(byte)0xb8,(byte)0xb6,(byte)0xbf,(byte)0xee,0x5d,0x0a,0x1b,0x4d,0x00
				,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a
				,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x0a
				,0x1b,0x40,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x01,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,(byte)0xc6,(byte)0xda,(byte)0xcd,(byte)0xfb,(byte)0xcb,(byte)0xcd,(byte)0xb4,(byte)0xef
				,(byte)0xca,(byte)0xb1,(byte)0xbc,(byte)0xe4,(byte)0xa3,(byte)0xba,(byte)0xc1,(byte)0xa2,(byte)0xbc,(byte)0xb4,(byte)0xc5,(byte)0xe4,(byte)0xcb,(byte)0xcd,0x0a,(byte)0xb6,(byte)0xa9,(byte)0xb5,(byte)0xa5,(byte)0xb1,(byte)0xb8,(byte)0xd7,(byte)0xa2,(byte)0xa3,(byte)0xba,(byte)0xc7,(byte)0xeb,(byte)0xcb
				,(byte)0xcd,(byte)0xb5,(byte)0xbd,(byte)0xbf,(byte)0xfc,(byte)0xbf,(byte)0xc6,(byte)0xce,(byte)0xf7,(byte)0xc3,(byte)0xc5,0x2c,(byte)0xb2,(byte)0xbb,(byte)0xd2,(byte)0xaa,(byte)0xc0,(byte)0xb1,0x0a,(byte)0xb7,(byte)0xa2,(byte)0xc6,(byte)0xb1,(byte)0xd0,(byte)0xc5,(byte)0xcf,(byte)0xa2,(byte)0xa3
				,(byte)0xba,(byte)0xb0,(byte)0xd9,(byte)0xb6,(byte)0xc8,(byte)0xcd,(byte)0xe2,(byte)0xc2,(byte)0xf4,(byte)0xb7,(byte)0xa2,(byte)0xc6,(byte)0xb1,0x0a,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47
				,0x00,0x1b,0x61,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a
				,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x0a
				,0x1b,0x40,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,(byte)0xb6,(byte)0xa9,(byte)0xb5,(byte)0xa5,(byte)0xb1,(byte)0xe0,(byte)0xba,(byte)0xc5
				,(byte)0xa3,(byte)0xba,0x31,0x34,0x31,0x38,0x37,0x31,0x38,0x36,0x39,0x31,0x31,0x36,0x38,0x39,0x0a,(byte)0xcf,(byte)0xc2,(byte)0xb5,(byte)0xa5,(byte)0xca,(byte)0xb1,(byte)0xbc,(byte)0xe4,(byte)0xa3,(byte)0xba,0x32
				,0x30,0x31,0x34,0x2d,0x31,0x32,0x2d,0x31,0x36,0x20,0x31,0x36,0x3a,0x33,0x31,0x0a,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00
				,0x1b,0x47,0x00,0x1b,0x61,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a
				,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x0a
				,0x1b,0x40,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x01,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,(byte)0xb2,(byte)0xcb,(byte)0xc6,(byte)0xb7,(byte)0xc3,(byte)0xfb,(byte)0xb3,(byte)0xc6
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,(byte)0xca,(byte)0xfd,(byte)0xc1,(byte)0xbf,0x20,0x20,0x20,0x20,0x20,(byte)0xbd,(byte)0xf0,(byte)0xb6,(byte)0xee,0x0a,0x1b,0x4d,0x00,0x1b,0x61
				,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x01,0x1b
				,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,(byte)0xcf,(byte)0xe3,(byte)0xc0,(byte)0xb1,(byte)0xc3,(byte)0xe6,(byte)0xcc,(byte)0xd7,(byte)0xb2,(byte)0xcd,0x1b,0x24,(byte)0xf2,0x00,0x31,0x1b,0x24,0x25,0x01,(byte)0xa3
				,(byte)0xa4,0x34,0x30,0x2e,0x30,0x30,0x0a,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x1b,0x4d,0x00
				,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x01,0x1b,0x45,0x00,0x1b
				,0x47,0x00,0x1b,0x61,0x00,(byte)0xcb,(byte)0xd8,(byte)0xca,(byte)0xb3,(byte)0xcc,(byte)0xec,(byte)0xcf,(byte)0xc2,(byte)0xba,(byte)0xba,(byte)0xb1,(byte)0xa4,0x1b,0x24,(byte)0xf2,0x00,0x31,0x1b,0x24,0x25,0x01,(byte)0xa3,(byte)0xa4
				,0x33,0x38,0x2e,0x30,0x30,0x0a,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x1b,0x4d,0x00,0x1b
				,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00
				,0x1b,0x40,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a
				,0x1b,0x40,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a
				,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x0a,0x1b,0x4d,0x00
				,0x1b,0x61,0x00,0x1d,0x21,0x01,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,(byte)0xd0,(byte)0xd5,(byte)0xc3,(byte)0xfb,(byte)0xa3,(byte)0xba,(byte)0xb0,(byte)0xd9,(byte)0xb6,(byte)0xc8,(byte)0xb2,(byte)0xe2,(byte)0xca
				,(byte)0xd4,0x0a,(byte)0xb5,(byte)0xd8,(byte)0xd6,(byte)0xb7,(byte)0xa3,(byte)0xba,(byte)0xbf,(byte)0xfc,(byte)0xbf,(byte)0xc6,(byte)0xbf,(byte)0xc6,(byte)0xbc,(byte)0xbc,(byte)0xb4,(byte)0xf3,(byte)0xcf,(byte)0xc3,0x0a,(byte)0xb5,(byte)0xe7,(byte)0xbb,(byte)0xb0,(byte)0xa3,(byte)0xba,0x31
				,0x38,0x37,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x0a
				,0x1b,0x40,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a
				,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x0a,(byte)0xb0,(byte)0xd9,(byte)0xb6
				,(byte)0xc8,(byte)0xb2,(byte)0xe2,(byte)0xca,(byte)0xd4,(byte)0xc9,(byte)0xcc,(byte)0xbb,(byte)0xa7,0x0a,0x31,0x38,0x37,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x0a,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d
				,0x21,0x00,0x1b,0x45,0x00,0x1b,0x47,0x00,0x1b,0x61,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a
				,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x0a,0x1b,0x4d,0x00,0x1b,0x61,0x00,0x1d,0x21,0x00,0x1b,0x45,0x00
				,0x1b,0x47,0x00,0x1b,0x61,0x00,0x1b,0x61,0x01,0x23,0x31,0x35,0x20,(byte)0xb0,(byte)0xd9,(byte)0xb6,(byte)0xc8,(byte)0xcd,(byte)0xe2,(byte)0xc2,(byte)0xf4,0x20,0x20,0x31,0x31,(byte)0xd4,(byte)0xc2,0x30
				,0x39,(byte)0xc8,(byte)0xd5,0x20,0x31,0x37,0x3a,0x35,0x30,0x3a,0x33,0x30,0x0a,0x0a,0x0a,0x0a,0x0a
		};
		return rv;
	}
	
	public byte[] getMeituanBill(){
		byte[] rv = new byte[]{
				0x1b,0x40,0x1b,0x61,0x01,0x1d,0x21,0x11,(byte)0xa3,(byte)0xa3,0x31,0x20,0x20,(byte)0xc3,(byte)0xc0,(byte)0xcd,(byte)0xc5,(byte)0xb2,(byte)0xe2,(byte)0xca,(byte)0xd4,0x0a
				,0x0a,0x1d,0x21,0x00,(byte)0xd4,(byte)0xc1,(byte)0xcf,(byte)0xe3,(byte)0xb8,(byte)0xdb,(byte)0xca,(byte)0xbd,(byte)0xc9,(byte)0xd5,(byte)0xc0,(byte)0xb0,0x28,(byte)0xb5,(byte)0xda,0x31,(byte)0xc1,(byte)0xaa
				,0x29,0x0a,0x1b,0x21,0x10,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x2a,0x20,0x2a,0x20,0x2a,0x20
				,0x2a,0x20,0x2a,0x20,0x2a,0x20,0x20,(byte)0xd4,(byte)0xa4,(byte)0xb6,(byte)0xa9,(byte)0xb5,(byte)0xa5,0x20,0x20,0x2a,0x20,0x2a,0x20,0x2a,0x20,0x2a
				,0x20,0x2a,0x20,0x2a,0x0a,(byte)0xc6,(byte)0xda,(byte)0xcd,(byte)0xfb,(byte)0xcb,(byte)0xcd,(byte)0xb4,(byte)0xef,(byte)0xca,(byte)0xb1,(byte)0xbc,(byte)0xe4,0x3a,0x20,0x5b,0x31,0x38
				,0x3a,0x30,0x30,0x5d,0x0a,0x1d,0x21,0x00,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x1b,0x61,0x00
				,(byte)0xcf,(byte)0xc2,(byte)0xb5,(byte)0xa5,(byte)0xca,(byte)0xb1,(byte)0xbc,(byte)0xe4,0x3a,0x30,0x31,0x2d,0x30,0x31,0x20,0x31,0x32,0x3a,0x30,0x30,0x0a,0x1b
				,0x21,0x10,(byte)0xb1,(byte)0xb8,(byte)0xd7,(byte)0xa2,0x3a,(byte)0xb1,(byte)0xf0,(byte)0xcc,(byte)0xab,(byte)0xc0,(byte)0xb1,0x0a,0x1d,0x21,0x00,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,(byte)0xb2,(byte)0xcb,(byte)0xc3,(byte)0xfb,0x09,0x09,0x20,0x20,0x20,(byte)0xca,(byte)0xfd,(byte)0xc1,(byte)0xbf,0x09,0x20,0x20
				,0x20,0x20,(byte)0xd0,(byte)0xa1,(byte)0xbc,(byte)0xc6,0x09,0x0a,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x1b,0x21,0x10
				,(byte)0xba,(byte)0xec,(byte)0xc9,(byte)0xd5,(byte)0xc8,(byte)0xe2,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x78
				,0x31,0x09,0x20,0x20,0x20,0x20,0x20,0x20,0x31,0x32,0x0a,0x1d,0x21,0x00,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x0a,(byte)0xc5,(byte)0xe4,(byte)0xcb,(byte)0xcd,(byte)0xb7,(byte)0xd1,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x35,0x0a,(byte)0xb2,(byte)0xcd,(byte)0xba,(byte)0xd0,(byte)0xb7,(byte)0xd1,0x20,0x20
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
				,0x20,0x31,0x0a,0x5b,(byte)0xb3,(byte)0xac,(byte)0xca,(byte)0xb1,(byte)0xc5,(byte)0xe2,(byte)0xb8,(byte)0xb6,0x5d,0x20,0x2d,(byte)0xcf,(byte)0xea,(byte)0xbc,(byte)0xfb,(byte)0xb6,(byte)0xa9,(byte)0xb5
				,(byte)0xa5,0x0a,(byte)0xbf,(byte)0xc9,(byte)0xbf,(byte)0xda,(byte)0xbf,(byte)0xc9,(byte)0xc0,(byte)0xd6,0x3a,0x78,0x31,0x0a,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x0a,0x1b,0x21,0x10,(byte)0xba,(byte)0xcf,(byte)0xbc,(byte)0xc6,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x31,0x38,(byte)0xd4,(byte)0xaa,0x0a,0x1b,0x40,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x1d,0x21,0x11,(byte)0xd5,(byte)0xc5,0x2a,0x20,0x31,0x38,0x33,0x31,0x32,0x33,0x34
				,0x35,0x36,0x37,0x38,0x0a,(byte)0xb5,(byte)0xd8,(byte)0xd6,(byte)0xb7,(byte)0xd0,(byte)0xc5,(byte)0xcf,(byte)0xa2,0x0a,0x1d,0x21,0x00,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d
				,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x0a,0x1b,0x40,0x1b,0x61,0x01,0x1d,0x21,0x11,(byte)0xa3,(byte)0xa3,0x31,0x20,0x20,(byte)0xc3,(byte)0xc0
				,(byte)0xcd,(byte)0xc5,(byte)0xb2,(byte)0xe2,(byte)0xca,(byte)0xd4,0x0a,0x1d,0x21,0x00,0x1b,0x40,0x0a,0x0a,0x0a,0x1d,0x56,0x00				
		};
		return rv;
	}
	
	public byte[] getKoubeiData(){
		byte[] rv = new byte[]{
				0x1b,0x40,0x1b,0x61,0x01,0x1d,0x21,0x11,0x23,0x34,(byte)0xbf,(byte)0xda,(byte)0xb1,(byte)0xae,(byte)0xcd,(byte)0xe2,
				(byte)0xc2,(byte)0xf4,0x0a,0x1b,0x40,0x1b,0x61,0x01,0x1d,0x21,0x11,0x0a,0x1b,0x40,0x1b,0x61,
				0x01,(byte)0xb7,(byte)0xeb,(byte)0xbc,(byte)0xc7,(byte)0xbb,(byte)0xc6,(byte)0xec,(byte)0xcb,(byte)0xbc,(byte)0xa6,(byte)0xc3,(byte)0xd7,(byte)0xb7,(byte)0xb9,0x0a,
				0x1b,0x40,0x1b,0x61,0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,
				0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,
				0x2a,0x2a,0x2a,0x2a,0x2a,0x0a,0x1b,0x40,0x1b,0x61,0x00,0x1d,0x21,0x11,0x31,0x37,
				0x3a,0x32,0x30,0x20,(byte)0xbe,(byte)0xa1,(byte)0xbf,(byte)0xec,(byte)0xcb,(byte)0xcd,(byte)0xb4,(byte)0xef,0x0a,0x1b,0x40,0x1b,
				0x61,0x00,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,
				0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,
				0x2d,0x0a,0x1b,0x40,0x1b,0x61,0x00,0x1d,0x21,0x11,0x31,0x38,0x36,0x31,0x30,0x38,
				0x35,0x38,0x33,0x33,0x37,0x1b,0x61,0x00,0x1d,0x21,0x01,(byte)0xce,(byte)0xa4,(byte)0xd0,(byte)0xa1,(byte)0xb1,
				(byte)0xa6,0x0a,0x1b,0x40,0x1b,0x61,0x00,0x1d,0x21,0x11,(byte)0xb4,(byte)0xb4,(byte)0xd6,(byte)0xc7,(byte)0xcc,(byte)0xec,
				(byte)0xb5,(byte)0xd8,(byte)0xb9,(byte)0xe3,(byte)0xb3,(byte)0xa1,0x37,(byte)0xba,(byte)0xc5,(byte)0xc2,(byte)0xa5,0x28,0x36,0x30,0x35,(byte)0xca,
				(byte)0xd2,0x29,0x0a,0x1b,0x40,0x1b,0x61,0x00,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,
				0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,
				0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x1b,0x40,0x1b,0x61,0x00,0x1d,0x21,0x01,
				(byte)0xcf,(byte)0xc2,(byte)0xb5,(byte)0xa5,(byte)0xa3,(byte)0xba,0x31,0x36,0x3a,0x33,0x35,0x0a,0x1b,0x40,0x1b,0x61,
				0x00,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,
				0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,
				0x2a,0x0a,0x1b,0x40,0x1b,0x61,0x00,(byte)0xb2,(byte)0xcb,(byte)0xc6,(byte)0xb7,0x20,0x20,0x20,0x20,0x20,
				0x20,0x20,0x20,0x20,0x20,0x1b,0x61,0x00,(byte)0xca,(byte)0xfd,(byte)0xc1,(byte)0xbf,0x1b,0x61,0x00,0x20,
				0x20,(byte)0xb5,(byte)0xa5,(byte)0xbc,(byte)0xdb,0x1b,0x61,0x00,0x20,0x20,(byte)0xbd,(byte)0xf0,(byte)0xb6,(byte)0xee,0x0a,0x1b,
				0x40,0x1b,0x61,0x00,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,
				0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,
				0x2d,0x2d,0x2d,0x0a,0x1b,0x40,0x1b,0x61,0x00,(byte)0xbb,(byte)0xc6,(byte)0xec,(byte)0xcb,(byte)0xce,(byte)0xe5,(byte)0xbb,
				(byte)0xa8,(byte)0xc8,(byte)0xe2,(byte)0xb7,(byte)0xb9,(byte)0xa3,(byte)0xa8,(byte)0xb4,(byte)0xf3,(byte)0xa3,(byte)0xa9,0x28,(byte)0xb2,(byte)0xbb,(byte)0xc0,(byte)0xb1,
				0x29,0x0a,0x1b,0x40,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
				0x20,0x20,0x1b,0x61,0x00,0x20,0x31,0x20,0x20,0x1b,0x61,0x00,0x20,0x20,0x20,0x20,
				0x32,0x35,0x1b,0x61,0x00,0x20,0x20,0x20,0x20,0x32,0x35,0x0a,0x1b,0x40,0x1b,0x61,
				0x00,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,
				0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,
				0x0a,0x1b,0x40,0x1b,0x61,0x00,(byte)0xc5,(byte)0xe4,(byte)0xcb,(byte)0xcd,(byte)0xb7,(byte)0xd1,0x20,0x20,0x20,0x20,
				0x20,0x20,0x20,0x20,0x1b,0x61,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
				0x20,0x20,0x20,0x20,0x20,0x20,0x32,0x0a,0x1b,0x40,0x1b,0x61,0x00,0x2d,0x2d,0x2d,
				0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,
				0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x0a,0x1b,0x40,0x1b,
				0x61,0x00,0x1d,0x21,0x01,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
				0x20,0x20,0x20,0x20,0x20,(byte)0xca,(byte)0xb5,(byte)0xb8,(byte)0xb6,(byte)0xbd,(byte)0xf0,(byte)0xb6,(byte)0xee,(byte)0xa3,(byte)0xba,(byte)0xa3,
				(byte)0xa4,0x32,0x37,0x0a,0x1b,0x40,0x0a,0x1b,0x40,0x0a,0x1b,0x40,0x1b,0x61,0x01,0x1d,
				0x21,0x11,(byte)0xbf,(byte)0xda,(byte)0xb1,(byte)0xae,(byte)0xcd,(byte)0xe2,(byte)0xc2,(byte)0xf4,0x0a,0x1b,0x40,0x0a,0x1b,0x40,
				0x1d,0x56,0x42,0x0a,0x0a				
		};
		return rv;
	}
	
/*	
   //getting the cpu model
   private String getCpuHardware() {

		String hardware = "";
		String str = "";
		try {
			Process pp = Runtime.getRuntime().exec("cat /proc/cpuinfo");
			InputStreamReader ir = new InputStreamReader(pp.getInputStream());
			LineNumberReader input = new LineNumberReader(ir);
			while ((str = input.readLine()) != null) {
				if (str.startsWith("Hardware")) {
					int i = str.indexOf(":");
					hardware = str.substring(i + 1).trim().toUpperCase();
					return hardware;
				}
			}

		} catch (IOException ex) {
				ex.printStackTrace();
		}
		return hardware;
	}
*/	

	public  byte[] setCusorPosition(int position) {
		byte[] returnText = new byte[6]; //  current line ,setting absolute print position  ESC $ bL bH
		returnText[0] = 0x1B;
		returnText[1] = 0x24;
		returnText[2] = (byte)position;
		returnText[3] = (byte)(position >> 8);
		returnText[4] = 0x2E;
		returnText[5] = 0x0A;
		return returnText;
	}
	
	public byte[] getElemo2(){
		byte[] rv = new byte[]{
				0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x20,(byte)0xC6,(byte)0xE4,(byte)0xCB,(byte)0xFB,(byte)0xB7,(byte)0xD1,(byte)0xD3,(byte)0xC3,0x20,0x2D
				,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x0A,0x1D,0x21,0x01,(byte)0xB2,(byte)0xE2,(byte)0xCA,(byte)0xD4,(byte)0xCD,(byte)0xF5,(byte)0xC0,(byte)0xCF
				,(byte)0xBC,(byte)0xAA,0x1D,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1D,0x21,0x01,0x20
				,0x78,0x31,0x1D,0x21,0x00,0x1D,0x21,0x01,0x1D,0x21,0x00,0x20,0x20,0x1D,0x21,0x01,0x30,0x2E,0x30,0x30,0x1D,0x21
				,0x00,0x0A,0x1D,0x21,0x01,(byte)0xB2,(byte)0xE2,(byte)0xCA,(byte)0xD4,(byte)0xB2,(byte)0xCD,(byte)0xBA,(byte)0xD0,(byte)0xB7,(byte)0xD1,0x1D,0x21,0x00,0x20,0x20,0x20,0x20
				,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x1D,0x21,0x01,0x20,0x78,0x31,0x1D,0x21,0x00,0x1D,0x21,0x01,0x1D
				,0x21,0x00,0x20,0x20,0x1D,0x21,0x01,0x34,0x2E,0x30,0x30,0x1D,0x21,0x00,0x0A,0x1D,0x21,0x01,(byte)0xB2,(byte)0xE2,(byte)0xCA,(byte)0xD4
				,(byte)0xC5,(byte)0xE4,(byte)0xCB,(byte)0xCD,(byte)0xB7,(byte)0xD1,0x1D,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
				,0x1D,0x21,0x01,0x20,0x78,0x31,0x1D,0x21,0x00,0x1D,0x21,0x01,0x1D,0x21,0x00,0x20,0x20,0x1D,0x21,0x01,0x35,0x2E
				,0x30,0x30,0x1D,0x21,0x00,0x0A,0x1D,0x21,0x01,(byte)0xB2,(byte)0xE2,(byte)0xCA,(byte)0xD4,(byte)0xC3,(byte)0xC0,(byte)0xC2,(byte)0xFA,0x31,0x30,(byte)0xBC,(byte)0xF5,0x35
				,(byte)0xBB,(byte)0xEE,(byte)0xB6,(byte)0xAF,0x32,0x1D,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x1D,0x21,0x01,0x20,0x78,0x31,0x1D,0x21,0x00
				,0x1D,0x21,0x01,0x1D,0x21,0x00,0x20,0x1D,0x21,0x01,0x2D,0x35,0x2E,0x30,0x30,0x1D,0x21,0x00,0x0A,0x1D,0x21,0x01
				,(byte)0xCA,(byte)0xB9,(byte)0xD3,(byte)0xC3,(byte)0xBA,(byte)0xEC,(byte)0xB0,(byte)0xFC,0x1D,0x21,0x00,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
				,0x20,0x20,0x20,0x20,0x1D,0x21,0x01,0x20,0x78,0x31,0x1D,0x21,0x00,0x1D,0x21,0x01,0x1D,0x21,0x00,0x20,0x1D,0x21
				,0x01,0x2D,0x35,0x2E,0x30,0x30,0x1D,0x21,0x00,0x0A,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
				,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D,0x0A,0x1D
				,0x21,0x11,0x35,0x30,0x2E,0x30,(byte)0xD4,(byte)0xAA,0x1D,0x21,0x00,0x00,0x0A,0x0A,0x1D,0x21,0x11,(byte)0xD0,(byte)0xC7,(byte)0xB0,(byte)0xCD,(byte)0xBF
				,(byte)0xCB,(byte)0xBF,(byte)0xA7,(byte)0xB7,(byte)0xC8,(byte)0xB8,(byte)0xBD,(byte)0xBD,(byte)0xFC,0x1D,0x21,0x00,0x00,0x0A,0x1D,0x21,0x11,(byte)0xB2,(byte)0xE2,(byte)0xCA,(byte)0xD4,0x64
				,(byte)0xCD,(byte)0xAC,(byte)0xD1,(byte)0xA7,0x1D,0x21,0x00,0x00,0x0A,0x1D,0x21,0x11,0x31,0x33,0x38,0x2D,0x31,0x32,0x33,0x34,0x2D,0x35
				,0x36,0x37,0x38,0x1D,0x21,0x00,0x00,0x0A,0x1D,0x21,0x11,0x31,0x33,0x38,0x2D,0x31,0x32,0x33,0x34,0x2D,0x35,0x36
				,0x37,0x39,0x1D,0x21,0x00,0x00,0x0A,0x0A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x20,0x1D,0x21,0x11
				,0x23,0x35,0x33,0x1D,0x21,0x00,0x00,(byte)0xCD,(byte)0xEA,0x21,0x20,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x0A
				,0x0A,0x0A,0x0A,0x0A,0x0A				
		};
		return rv;
	}
}
